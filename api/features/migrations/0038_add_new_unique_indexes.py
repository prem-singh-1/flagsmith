# Generated by Django 3.2.12 on 2022-02-17 17:14

from django.db import migrations, models

from core.migration_helpers import PostgresOnlyRunSQL, NonPostgresDBOnlyRunSQL


class Migration(migrations.Migration):

    atomic = False

    dependencies = [
        ("features", "0037_add_feature_state_versioning_fields"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.AddConstraint(
                    model_name='featurestate',
                    constraint=models.UniqueConstraint(
                        condition=models.Q(('identity__isnull', True)),
                        fields=('environment', 'feature', 'feature_segment', 'version'),
                        name='unique_for_feature_segment'),
                ),
                migrations.AddConstraint(
                    model_name='featurestate',
                    constraint=models.UniqueConstraint(
                        condition=models.Q(('feature_segment__isnull', True)),
                        fields=('environment', 'feature', 'identity', 'version'),
                        name='unique_for_identity'),
                ),
                migrations.AddConstraint(
                    model_name='featurestate',
                    constraint=models.UniqueConstraint(
                        condition=models.Q(('feature_segment__isnull', True),
                                           ('identity__isnull', True)),
                        fields=('environment', 'feature', 'version'),
                        name='unique_for_environment'),
                ),
            ],
            database_operations=[
                PostgresOnlyRunSQL(
                    """CREATE UNIQUE INDEX CONCURRENTLY "unique_for_environment" 
                        ON "features_featurestate" ("environment_id", "feature_id", "version") 
                        WHERE ("feature_segment_id" IS NULL AND "identity_id" IS NULL);""",
                    reverse_sql='DROP INDEX CONCURRENTLY "unique_for_environment"',
                ),
                PostgresOnlyRunSQL(
                    """CREATE UNIQUE INDEX CONCURRENTLY "unique_for_feature_segment" 
                        ON "features_featurestate" ("environment_id", "feature_id", "feature_segment_id", "version") 
                        WHERE "identity_id" IS NULL;""",
                    reverse_sql='DROP INDEX CONCURRENTLY "unique_for_feature_segment"',
                ),
                PostgresOnlyRunSQL(
                    """CREATE UNIQUE INDEX CONCURRENTLY "unique_for_identity" 
                        ON "features_featurestate" ("environment_id", "feature_id", "identity_id", "version") 
                        WHERE "feature_segment_id" IS NULL;""",
                    reverse_sql='DROP INDEX CONCURRENTLY "unique_for_identity"',
                ),
                NonPostgresDBOnlyRunSQL(
                    """CREATE UNIQUE INDEX "unique_for_environment" 
                        ON "features_featurestate" ("environment_id", "feature_id", "version") 
                        WHERE ("feature_segment_id" IS NULL AND "identity_id" IS NULL);""",
                    reverse_sql='DROP INDEX "unique_for_environment"',
                ),
                NonPostgresDBOnlyRunSQL(
                    """CREATE UNIQUE INDEX "unique_for_feature_segment" 
                        ON "features_featurestate" ("environment_id", "feature_id", "feature_segment_id", "version") 
                        WHERE "identity_id" IS NULL;""",
                    reverse_sql='DROP INDEX "unique_for_feature_segment"',
                ),
                NonPostgresDBOnlyRunSQL(
                    """CREATE UNIQUE INDEX "unique_for_identity" 
                        ON "features_featurestate" ("environment_id", "feature_id", "identity_id", "version") 
                        WHERE "feature_segment_id" IS NULL;""",
                    reverse_sql='DROP INDEX "unique_for_identity"',
                ),
            ]
        ),
    ]
