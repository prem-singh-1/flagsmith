# Generated by Django 3.2.12 on 2022-02-28 15:29

from django.db import migrations


from features.constants import DRAFT


def remove_old_and_draft_versions(apps, schema_editor):
    FeatureState = apps.get_model("features", "FeatureState")

    # TODO: work out why this doesn't work when unapplying more than 1 migration
    # latest_versions_qs = (
    #     FeatureState.objects.filter(status=COMMITTED)
    #     .values("feature", "feature_segment", "identity", "environment")
    #     .annotate(max_version=Max("version"))
    #     .order_by()
    # )
    # q = Q()
    # for latest_version_dict in latest_versions_qs:
    #     q = q | Q(
    #         feature_id=latest_version_dict["feature"],
    #         identity_id=latest_version_dict["identity"],
    #         feature_segment_id=latest_version_dict["feature_segment"],
    #         environment_id=latest_version_dict["environment"],
    #         version=latest_version_dict["max_version"],
    #     )
    #
    # FeatureState.objects.filter(q).delete()

    FeatureState.objects.filter(status=DRAFT).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("features", "0037_add_feature_state_versioning_fields"),
    ]

    operations = [
        migrations.RunPython(
            code=migrations.RunPython.noop,
            reverse_code=remove_old_and_draft_versions,
            atomic=False,
        ),
    ]
